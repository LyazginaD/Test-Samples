package com.example.usermanagement;

import com.example.usermanagement.event.*;
import com.example.usermanagement.model.User;
import com.example.usermanagement.repository.impl.InMemoryUserRepository;
import com.example.usermanagement.service.UserService;

import java.util.logging.Level;
import java.util.logging.Logger;

public class Main {
    public static void main(String[] args) {
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        Logger.getLogger("com.example.usermanagement").setLevel(Level.ALL);

        System.out.println("=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —à–∏–Ω—ã —Å–æ–±—ã—Ç–∏–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ ===\n");

        EventBus eventBus = new EventBus();

        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        eventBus.subscribe(new EventListener() {
            @Override
            public void onEvent(UserEvent event) {
                System.out.println("üìã –õ–æ–≥–≥–µ—Ä: " + event.getType() + " - " + event.getUser().getName());
            }

            @Override
            public String toString() {
                return "ConsoleLogger";
            }
        });

        eventBus.subscribe(new EventListener() {
            @Override
            public void onEvent(UserEvent event) {
                // –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –ø–∞–¥–∞—Ç—å —Å –æ—à–∏–±–∫–æ–π
                throw new RuntimeException("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!");
            }

            @Override
            public String toString() {
                return "NotificationHandler";
            }
        });

        eventBus.subscribe(new EventListener() {
            @Override
            public void onEvent(UserEvent event) {
                System.out.println("‚úÖ –ê—É–¥–∏—Ç–æ—Ä: –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ " + event.getType());
            }

            @Override
            public String toString() {
                return "AuditTrail";
            }
        });

        UserService userService = new UserService(new InMemoryUserRepository(), eventBus);

        try {
            System.out.println("–°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
            User user = userService.createUser("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "ivan@example.com");

            System.out.println("\n–û–±–Ω–æ–≤–ª—è–µ–º email...");
            userService.updateUserEmail(user.getId(), "ivan.new@example.com");

            System.out.println("\n–£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
            userService.deleteUser(user.getId());

        } catch (Exception e) {
            System.err.println("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " + e.getMessage());
        }

        System.out.println("\n=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===");
        System.out.println("–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –æ—à–∏–±–∫–∏ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö –±—ã–ª–∏ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω—ã");
        System.out.println("–∏ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∏–ª–∞ —Ä–∞–±–æ—Ç—É –Ω–æ—Ä–º–∞–ª—å–Ω–æ!");
    }
}